import jwt from "jsonwebtoken";

// Middleware ki·ªÉm tra x√°c th·ª±c
export const authenticateUser = (req, res, next) => {
    const token = req.header("Authorization");

    console.log("Received Token:", token); // üõ† In token ƒë·ªÉ ki·ªÉm tra
    // console.log("JWT Secret Key:", process.env.JWT_SECRET); // üõ† In Secret Key

    if (!token) {
        console.log("üö® Kh√¥ng c√≥ token ƒë∆∞·ª£c g·ª≠i!");
        return res.status(401).json({ message: "Kh√¥ng c√≥ token, t·ª´ ch·ªëi truy c·∫≠p!" });
    }

    try {
        const extractedToken = token.replace("Bearer ", ""); // L·∫•y token ƒë√∫ng ƒë·ªãnh d·∫°ng
        // console.log("Extracted Token:", extractedToken); // üõ† In token ƒë√£ x·ª≠ l√Ω

        const decoded = jwt.verify(extractedToken, process.env.JWT_SECRET);
        // console.log("Decoded Token:", decoded); // üõ† Xem n·ªôi dung token

        req.user = decoded;
        console.log("Request User:", req.user); // üõ† Ki·ªÉm tra user t·ª´ token

        next();
    } catch (error) {
        // console.error("üö® L·ªói x√°c th·ª±c Token:", error.message);
        res.status(401).json({ message: "Token kh√¥ng h·ª£p l·ªá!" });
    }
};

// Middleware ki·ªÉm tra role
export const authorizeRoles = (...roles) => {
    return (req, res, next) => {
        if (!roles.includes(req.user.role)) {
            return res.status(403).json({ message: "B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p!" });
        }
        next();
    };
};
