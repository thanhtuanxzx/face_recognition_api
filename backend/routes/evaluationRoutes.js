import express from "express";
import DisciplinaryRecord from "../models/DisciplinaryRecord.js";
import { getEvaluation,updateEvaluation } from "../controllers/evaluationController.js";
const router = express.Router();

/* üìå C·∫¨P NH·∫¨T ƒêI·ªÇM R√àN LUY·ªÜN */
router.post("/update/:userId",updateEvaluation);

router.get("/:userId", getEvaluation);


/* üìå TH√äM B·∫¢N GHI K·ª∂ LU·∫¨T */
router.post("/disciplinary", async (req, res) => {
  try {
    const { user_id, type, reason } = req.body;
    const newRecord = await DisciplinaryRecord.create({ user_id, type, reason });
    res.json({ message: "ƒê√£ th√™m b·∫£n ghi k·ª∑ lu·∫≠t!", record: newRecord });
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi th√™m b·∫£n ghi k·ª∑ lu·∫≠t!", error: error.message });
  }
});

/* üìå L·∫§Y DANH S√ÅCH K·ª∂ LU·∫¨T */
router.get("/disciplinary/:userId", async (req, res) => {
  try {
    const records = await DisciplinaryRecord.find({ user_id: req.params.userId });
    res.json(records);
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch k·ª∑ lu·∫≠t!", error: error.message });
  }
});

/* üìå C·∫¨P NH·∫¨T L√ù DO K·ª∂ LU·∫¨T */
router.put("/disciplinary/:recordId", async (req, res) => {
  try {
    const updatedRecord = await DisciplinaryRecord.findByIdAnevaluationdUpdate(
      req.params.recordId,
      { reason: req.body.reason },
      { new: true }
    );
    res.json({ message: "ƒê√£ c·∫≠p nh·∫≠t l√Ω do k·ª∑ lu·∫≠t!", updatedRecord });
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi c·∫≠p nh·∫≠t!", error: error.message });
  }
});

/* üìå X√ìA B·∫¢N GHI K·ª∂ LU·∫¨T */
router.delete("/disciplinary/:recordId", async (req, res) => {
  try {
    await DisciplinaryRecord.findByIdAndDelete(req.params.recordId);
    res.json({ message: "ƒê√£ x√≥a b·∫£n ghi k·ª∑ lu·∫≠t!" });
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi x√≥a!", error: error.message });
  }
});

export default router;
